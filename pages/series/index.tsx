import ApiCaller from '@/api';
import { ListContentInSeries } from '@/components/content-series';
import { CreateSeiresDialog } from '@/components/content-series/dialog';
import { Pagination, Stack, Typography } from '@mui/material';
import { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

interface SeriesItem {
    contents: any[];
    created_at: string;
    summary: string;
    title: string;
    updated_at: string;
    _id: string;
}

const ContentSeriesPage: NextPage & {
    layout?: string;
} = () => {
    const [series, setSeries] = useState<SeriesItem[]>([]);
    const [max, setMax] = useState<number>(0);
    const [loading, setLoading] = useState<boolean>(false);
    const router = useRouter();

    const { page } = router.query;
    const current =
        page && !Number.isNaN(Number(page)) && Number.isInteger(Number(page))
            ? Number(page) - 1
            : 0;

    useEffect(() => {
        setLoading(true);
        ApiCaller.series.getSeries(current, 0).then((res) => {
            const { data, max } = res.data;
            setSeries(data);
            setMax(max);
            setLoading(false);
        });
    }, [current]);

    return (
        <Stack
            direction="column"
            sx={{ padding: '10px', gap: '20px', minHeight: '100vh' }}
            alignItems="center"
        >
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {!loading ? (
                <>
                    <ListContentInSeries series={series} />
                    <Pagination
                        onChange={(e, page) => {
                            router.replace(`/series?page=${page}`);
                        }}
                        count={Math.round(max / 10) + 1}
                        defaultPage={current + 1}
                        siblingCount={1}
                        variant="outlined"
                    />
                    <CreateSeiresDialog
                        addSeries={(item: SeriesItem) => setSeries([...series, item])}
                    />
                </>
            ) : (
                <Stack>
                    <Typography>Loading</Typography>
                </Stack>
            )}
        </Stack>
    );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
    // const { data, max } = await ApiCaller.content.getAllSeries(current, 10);
    console.log(context.query.page);
    return {
        props: {}, // will be passed to the page component as props
    };
};

ContentSeriesPage.layout = 'client';
export default ContentSeriesPage;

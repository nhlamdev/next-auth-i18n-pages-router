import { NextPage } from 'next';
import dynamic from 'next/dynamic';
import { Checkbox, Stack, Typography } from '@mui/material';
import Head from 'next/head';
import { ManagerContentTagsComponent } from '@/components/new-content/tags-box';
import { ManagerCategoryBoxComponent } from '@/components/new-content/categoris-box';
import { useEffect, useState, useRef } from 'react';
import Image from 'next/image';

const TextEditor = dynamic(import('@/components/text-editor'), {
    ssr: false,
    loading: () => <p>Loading ...</p>,
});
const ContentNewPage: NextPage & {
    layout?: string;
} = () => {
    const [categories, setCategories] = useState([]);
    const [image, setImage] = useState<File | null>(null);
    const fileRef = useRef<HTMLInputElement | null>(null);
    const [data, setData] = useState<{
        title: string;
        summary: string;
        body: string;
        category: string;
        complete: boolean;
        public: boolean;
        tags: string[];
        image: string;
    }>({
        body: '',
        summary: '',
        title: '',
        category: '',
        complete: false,
        public: false,
        image: '',
        tags: [],
    });

    useEffect(() => {}, []);

    return (
        <Stack sx={{ display: 'flex', flexDirection: 'row', gap: '20px', padding: '10px 20px' }}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Stack
                sx={{
                    flex: 7,
                    display: 'flex',
                    flexDirection: 'column',
                    gap: '20px',
                }}
            >
                <input
                    type="text"
                    placeholder="Nhập tiêu đề"
                    style={{
                        padding: '10px 20px',
                        borderBottom: '1px solid #000000 ',
                    }}
                    onChange={(e) => setData({ ...data, ['title']: e.target.value })}
                />

                <textarea
                    placeholder="Nhập Mô tả ngắn"
                    style={{
                        padding: '20px',
                        border: '1px solid black',
                        borderRadius: '10px',
                        resize: 'none',
                        height: '150px',
                    }}
                    onChange={(e) => setData({ ...data, ['title']: e.target.value })}
                />

                <div style={{ display: 'flex', alignItems: 'center' }}>
                    <Checkbox />
                    <span style={{ fontSize: '14px' }}>Công khai</span>
                </div>

                <TextEditor
                    value={data.body}
                    height="500px"
                    change={(v: string) => setData({ ...data, ['body']: v })}
                />

                <Stack direction="row" sx={{ gap: '10px' }}>
                    <Stack
                        sx={{
                            padding: '10px 20px',
                            backgroundColor: '#00CD81',
                            borderRadius: '5px',
                            cursor: 'pointer',
                        }}
                        onClick={() => console.log(data)}
                    >
                        <span style={{ fontSize: '14px', fontWeight: 600 }}>Hoàn thành</span>
                    </Stack>
                    <Stack
                        sx={{
                            padding: '10px 20px',
                            backgroundColor: '#723200',
                            borderRadius: '5px',
                            cursor: 'pointer',
                        }}
                    >
                        <span style={{ fontSize: '14px', color: '#fff', fontWeight: 600 }}>
                            Lưu nháp
                        </span>
                    </Stack>
                </Stack>
            </Stack>

            <Stack
                sx={{
                    flex: 3,
                    display: 'flex',
                    flexDirection: 'column',
                    gap: '10px',
                    width: '100%',
                }}
                alignItems="center"
            >
                {image ? (
                    <Image
                        onClick={() => {
                            if (fileRef && fileRef.current) {
                                fileRef.current.click();
                            }
                        }}
                        style={{
                            cursor: 'pointer',
                            borderRadius: '10px',
                        }}
                        src={URL.createObjectURL(image)}
                        width={300}
                        height={200}
                        alt="image"
                    />
                ) : (
                    <Image
                        onClick={() => {
                            if (fileRef && fileRef.current) {
                                fileRef.current.click();
                            }
                        }}
                        style={{
                            cursor: 'pointer',
                            borderRadius: '10px',
                        }}
                        src="http://via.placeholder.com/300x200"
                        width={300}
                        height={200}
                        alt="image"
                    />
                )}

                <input
                    ref={fileRef}
                    type="file"
                    hidden
                    onChange={(e) => {
                        if (e.target.files) {
                            setImage(e.target.files[0]);
                        }
                    }}
                />

                <ManagerContentTagsComponent
                    values={data.tags}
                    change={(v: string) => {
                        if (data.tags.includes(v)) {
                            setData({ ...data, ['tags']: data.tags.filter((t) => t !== v) });
                        } else {
                            setData({ ...data, ['tags']: [...data.tags, v] });
                        }
                    }}
                />
                <ManagerCategoryBoxComponent />
            </Stack>
        </Stack>
    );
};
ContentNewPage.layout = 'client';
export default ContentNewPage;

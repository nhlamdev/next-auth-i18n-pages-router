import { IContent } from '@/interface';
import { Stack, Typography } from '@mui/material';
import axios from 'axios';
import { GetServerSideProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { ClientCommentComponent } from '@/components/comment';
interface ContentDetailPageProps {
    data: IContent;
    notFound: boolean;
}

const ContentDetailPage = (props: ContentDetailPageProps) => {
    const { data, notFound } = props;

    return (
        <Stack sx={{ padding: '10px', gap: '20px' }} alignItems="center">
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Stack
                sx={{
                    alignItems: 'center',
                    width: '100%',
                    position: 'relative',
                }}
                alignItems="center"
                justifyContent="center"
            >
                <Stack
                    sx={{
                        content: '""',
                        zIndex: '-1',
                        border: '5px',
                        position: 'absolute',
                        width: '100%',
                        height: '80%',
                        boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px;',
                    }}
                />
                <Image
                    src={`/services/${data.image}`}
                    width={400}
                    height={200}
                    quality={75}
                    style={{
                        objectFit: 'cover',
                        boxShadow:
                            'rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset',
                    }}
                    alt="photo"
                />
            </Stack>

            <Stack sx={{ minHeight: '300px' }} dangerouslySetInnerHTML={{ __html: data.body }} />

            <Stack direction="row" sx={{ justifyContent: 'space-between', gap: '10px' }}>
                {Array.from({ length: 4 }, (_, i) => i + 1).map((v) => {
                    return (
                        <Stack
                            key={v + 'asdas'}
                            style={{
                                position: 'relative',
                                cursor: 'pointer',
                                borderRadius: '5px',
                                overflow: 'hidden',
                                border: '1px solid white',
                                boxShadow:
                                    'rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px',
                            }}
                        >
                            <Stack
                                sx={{
                                    position: 'absolute',
                                    top: '10px',
                                    left: 0,
                                    backgroundColor: 'White',
                                    padding: '5px 10px',
                                    borderRadius: '0px 5px 5px 0px',
                                }}
                            >
                                <Typography sx={{ fontSize: '12px' }}>react</Typography>
                            </Stack>
                            <Image
                                src="/a_100421840_m_601_en_m1_1013_638.jpg"
                                width={300}
                                height={200}
                                quality={75}
                                style={{ objectFit: 'cover' }}
                                alt="photo"
                            />
                            <Stack
                                sx={{
                                    position: 'absolute',
                                    backgroundColor: '#00000080',
                                    bottom: 0,
                                    padding: '10px',
                                }}
                            >
                                <Typography
                                    sx={{
                                        color: '#fff',
                                        fontSize: '12px',
                                        overflow: 'hidden',
                                        display: '-webkit-box',
                                        WebkitLineClamp: 2,
                                        lineClamp: 2,
                                        WebkitBoxOrient: 'vertical',
                                        wordBreak: 'break-word',
                                    }}
                                >
                                    asdassssssssssssssssssssssssssssssssssdasdasdasdadasdasdqwwwwwwwwwwwdasdasdasdaaaaaaaaaasdad
                                </Typography>
                            </Stack>
                        </Stack>
                    );
                })}
            </Stack>

            <ClientCommentComponent />
        </Stack>
    );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
    const { id } = context.query;
    const backend = process.env.BACKEND;

    if (!id && !backend) {
        return {
            props: { notFound: true },
        };
    }

    try {
        const res = await axios.get(`${backend}/content/${id}`);

        return {
            props: { data: res.data, notFound: false },
        };
    } catch (e) {
        console.log(e);
        return {
            props: { notFound: true },
        };
    }

    // ...
};

ContentDetailPage.layout = 'client';
export default ContentDetailPage;
